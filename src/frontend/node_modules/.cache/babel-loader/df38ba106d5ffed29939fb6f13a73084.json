{"ast":null,"code":"var _jsxFileName = \"/home/chris/Development/covidradar/src/frontend/src/Components/Form.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { React, useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  getGeoCode\n}) => {\n  _s();\n\n  const [options, setOptions] = useState([]);\n  const urlOptions = 'http://covidradarmadrid-env.eba-wbgad2ub.eu-south-1.elasticbeanstalk.com/api/names+geocodes';\n\n  const getOptions = () => {\n    axios.get(urlOptions).then(response => {\n      const allOptions = response.data;\n      setOptions(convertOptions(allOptions));\n    }).catch(error => console.error(`Error: ${error}`));\n  };\n\n  useEffect(getOptions, []);\n\n  const convertOptions = options => {\n    var optionsArray = Object.keys(options).map(name => {\n      return {\n        \"label\": name,\n        \"value\": options[name]\n      };\n    });\n    console.log(optionsArray);\n    return optionsArray;\n  };\n\n  function onChangeFunc(optionSelected) {\n    const geoCode = optionSelected.value;\n    getGeoCode(geoCode);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Select, {\n      options: options,\n      onChange: this.onChangeFunc,\n      autoFocus: true,\n      placeholder: \"Zona Basica de Salud\",\n      isSearchable: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"Cb37lItZDPBl0Zl/uTamqIOmlew=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/home/chris/Development/covidradar/src/frontend/src/Components/Form.js"],"names":["axios","React","useState","useEffect","Select","Form","getGeoCode","options","setOptions","urlOptions","getOptions","get","then","response","allOptions","data","convertOptions","catch","error","console","optionsArray","Object","keys","map","name","log","onChangeFunc","optionSelected","geoCode","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB;;;AAIA,MAAMC,IAAI,GAAG,CAAE;AAAEC,EAAAA;AAAF,CAAF,KAAsB;AAAA;;AAC/B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AAGA,QAAMO,UAAU,GAAG,6FAAnB;;AAEA,QAAMC,UAAU,GAAG,MAAM;AACrBV,IAAAA,KAAK,CAACW,GAAN,CAAUF,UAAV,EACCG,IADD,CACOC,QAAQ,IAAI;AACf,YAAMC,UAAU,GAAGD,QAAQ,CAACE,IAA5B;AACAP,MAAAA,UAAU,CAACQ,cAAc,CAACF,UAAD,CAAf,CAAV;AACH,KAJD,EAKCG,KALD,CAKOC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAe,UAASA,KAAM,EAA9B,CALhB;AAMH,GAPD;;AASAf,EAAAA,SAAS,CAACO,UAAD,EAAa,EAAb,CAAT;;AAEA,QAAMM,cAAc,GAAIT,OAAD,IAAa;AAChC,QAAIa,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYf,OAAZ,EAAqBgB,GAArB,CAA0BC,IAAI,IAAI;AACjD,aAAO;AAAE,iBAASA,IAAX;AAAkB,iBAASjB,OAAO,CAACiB,IAAD;AAAlC,OAAP;AACH,KAFkB,CAAnB;AAGAL,IAAAA,OAAO,CAACM,GAAR,CAAYL,YAAZ;AACA,WAAOA,YAAP;AACH,GAND;;AAQA,WAASM,YAAT,CAAsBC,cAAtB,EAAsC;AAClC,UAAMC,OAAO,GAAGD,cAAc,CAACE,KAA/B;AACAvB,IAAAA,UAAU,CAACsB,OAAD,CAAV;AACD;;AAGH,sBACI;AAAA,2BACI,QAAC,MAAD;AACI,MAAA,OAAO,EAAErB,OADb;AAEI,MAAA,QAAQ,EAAE,KAAKmB,YAFnB;AAGI,MAAA,SAAS,MAHb;AAII,MAAA,WAAW,EAAC,sBAJhB;AAKI,MAAA,YAAY;AALhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA3CD;;GAAMrB,I;;KAAAA,I;AA6CN,eAAeA,IAAf","sourcesContent":["import axios from 'axios';\nimport { React, useState, useEffect } from 'react';\nimport Select from 'react-select';\n\n\n\nconst Form = ( { getGeoCode } ) => {\n    const [options, setOptions] = useState([]);\n\n\n    const urlOptions = 'http://covidradarmadrid-env.eba-wbgad2ub.eu-south-1.elasticbeanstalk.com/api/names+geocodes';\n\n    const getOptions = () => {\n        axios.get(urlOptions)\n        .then( response => {\n            const allOptions = response.data;\n            setOptions(convertOptions(allOptions));\n        })\n        .catch(error => console.error(`Error: ${error}`));\n    }\n\n    useEffect(getOptions, []);\n\n    const convertOptions = (options) => {\n        var optionsArray = Object.keys(options).map( name => {\n            return { \"label\": name , \"value\": options[name]};\n        });        \n        console.log(optionsArray);\n        return optionsArray;\n    }\n\n    function onChangeFunc(optionSelected) {\n        const geoCode = optionSelected.value;\n        getGeoCode(geoCode);\n      }\n    \n\n    return(\n        <div>\n            <Select\n                options={options}\n                onChange={this.onChangeFunc}\n                autoFocus\n                placeholder=\"Zona Basica de Salud\"\n                isSearchable\n            />\n        </div>\n    );\n    \n}\n\nexport default Form\n\n"]},"metadata":{},"sourceType":"module"}